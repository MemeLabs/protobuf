syntax = "proto3";

package strims.test;

option go_package = "github.com/MemeLabs/protobuf/pkg/apis/test;test";
option java_package = "org.memelabs.protobuf.test";
option swift_prefix = "STM";

import "test/internal.proto";

message TestMessage {
  enum TestEnum {
    TEST_ENUM_VAL_0 = 0;
    TEST_ENUM_VAL_1 = 1;
    TEST_ENUM_VAL_2 = 2;
  }

  message EmbeddedMessage {
    int32 embedded_value = 1;
  }

  int32 int32_value = 1;
  int64 int64_value = 2;
  uint32 uint32_value = 3;
  uint64 uint64_value = 4;
  sint32 sint32_value = 5;
  sint64 sint64_value = 6;
  bool bool_value = 7;
  TestEnum enum_value = 8;
  fixed64 fixed64_value = 9;
  sfixed64 sfixed64_value = 10;
  double double_value = 11;
  string string_value = 12;
  bytes bytes_value = 13;
  fixed32 fixed32_value = 14;
  sfixed32 sfixed_value = 15;
  float float_value = 16;
  EmbeddedMessage embedded_message_value = 17;
  SiblingMessage sibling_message_value = 18;

  map<string, int32> string_int32_map_value = 19;
  map<string, int64> string_int64_map_value = 20;
  map<string, string> string_string_map_value = 21;
  map<string, EmbeddedMessage> string_embedded_message_map_value = 22;
  map<int32, int32> int32_int32_map_value = 23;
  map<int32, int64> int32_int64_map_value = 24;
  map<int32, string> int32_string_map_value = 25;
  map<int32, EmbeddedMessage> int32_embedded_message_map_value = 26;
  map<int64, int32> int64_int32_map_value = 27;
  map<int64, int64> int64_int64_map_value = 28;
  map<int64, string> int64_string_map_value = 29;
  map<int64, EmbeddedMessage> int64_embedded_message_map_value = 30;

  repeated int32 repeated_int32_map_value = 31;
  repeated int64 repeated_int64_map_value = 32;
  repeated string repeated_string_map_value = 33;
  repeated EmbeddedMessage repeated_embedded_message_map_value = 34;
}

message SiblingMessage {}

message Foo {}

message Bar {
  message Foo {
    strims.test.Foo test_foo = 1;
    Foo test_bar_foo = 2;
    strims.test.internal.Foo test_internal_foo = 3;

    message Bar {
      strims.test.Foo test_foo = 1;
      strims.test.Bar.Foo test_bar_foo = 2;
      Foo test_bar_foo2 = 3;
      strims.test.Bar.Foo.Bar test_bar_foo_bar = 4;
      Bar test_bar_foo_bar2 = 5;
      strims.test.internal.Foo test_internal_foo = 6;
      strims.test.internal.Bar.Foo test_internal_bar_foo = 7;
      strims.test.internal.Bar.Foo.Bar test_internal_bar_foo_bar = 8;
    }
  }

  strims.test.Foo test_foo = 1;
  Foo test_bar_foo = 2;
  strims.test.internal.Foo test_internal_foo = 3;
}
